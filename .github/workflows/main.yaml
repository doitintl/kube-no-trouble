name: main
on:
  push:
    branches:
    - master
    tags:
    - "*"
  pull_request:
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    container: golang:1.13.9-alpine3.11
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Test
      run: |
        scripts/alpine-setup.sh
        GOOS=linux GOARCH=amd64 make test
  build:
    name: Build
    runs-on: ubuntu-latest
    container: golang:1.13.9-alpine3.11
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build
        run: |
          scripts/alpine-setup.sh
          GOOS=darwin GOARCH=amd64 make all
          GOOS=linux GOARCH=amd64 make all
        shell: sh
      - name: Archive release artifacts
        uses: actions/upload-artifact@v1
        with:
          name: release-artifacts
          path: release-artifacts
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release-artifacts
          path: release-artifacts
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          release_name: Release ${{ steps.get_tag.outputs.git_tag }}
          draft: true
          prerelease: false
      - name: Upload Release Asset - Mac
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-artifacts/kubent-${{ steps.get_tag.outputs.git_tag }}-darwin-amd64.tar.gz
          asset_name: kubent-${{ steps.get_tag.outputs.git_tag }}-darwin-amd64.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload Release Asset - Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-artifacts/kubent-${{ steps.get_tag.outputs.git_tag }}-linux-amd64.tar.gz
          asset_name: kubent-${{ steps.get_tag.outputs.git_tag }}-linux-amd64.tar.gz
          asset_content_type: application/tar+gzip
