name: main
on:
  push:
    branches:
    - master
    tags:
    - "*"
  pull_request:
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
      with:
        set-safe-directory: true
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v2.0.0
  test:
    name: test
    runs-on: ubuntu-latest
    container: golang:1.19.1-alpine3.16
    steps:
    - name: Install git
      run: apk add --update --no-cache git
    - name: Checkout code
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 0
        set-safe-directory: true
    - name: Test
      run: |
        scripts/alpine-setup.sh
        make test-ci
  build:
    name: build
    runs-on: ubuntu-latest
    container: golang:1.19.1-alpine3.16
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Install git
        run: apk add --update --no-cache git
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          set-safe-directory: true
      - name: Build
        run: |
          git config --global --add safe.directory /__w/kube-no-trouble/kube-no-trouble
          scripts/alpine-setup.sh
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make all
          make changelog
        shell: sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive release artifacts
        uses: actions/upload-artifact@v1
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
  integration-test:
    name: integration test
    needs:
      [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [
          "kindest/node:v1.20.7",
          "kindest/node:v1.19.11",
          "kindest/node:v1.18.19",
          "kindest/node:v1.17.17",
          "kindest/node:v1.16.15",
          "kindest/node:v1.15.12",
          "kindest/node:v1.14.10"
        ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 0
        set-safe-directory: true
    - uses: actions/download-artifact@v1
      with:
        name: release-artifacts-linux-amd64
        path: release-artifacts
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.1.0
      with:
        node_image: ${{ matrix.k8s_version }}
        cluster_name: kubent-test-cluster
    - name: run integration test
      run: |
        tar xvzf release-artifacts/kubent-*-linux-amd64.tar.gz
        kubectl version --short
        kubectl cluster-info --context kind-kubent-test-cluster
        ./kubent
  create-release:
    name: Create Release
    needs:
      [pre-commit, test, integration-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release-artifacts-linux-amd64
          path: release-artifacts
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          release_name: ${{ steps.get_tag.outputs.git_tag }}
          body_path: ./release-artifacts/changelog.md
          draft: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') != true }}
          prerelease: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') }}
  release-artifacts:
    name: Release Artifacts
    needs:
      [create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
      - name: Upload Release Asset - ${{ matrix.os }}-${{ matrix.arch }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release-artifacts/kubent-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_name: kubent-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/tar+gzip
